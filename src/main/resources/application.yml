spring:
  application:
    name: db-checker
  # 主数据源配置
  datasource:
    # 数据库初始化脚本配置
    init:
      # 是否启用初始化
      enabled: true
      # 各数据源脚本配置
      scripts:
        ora:
          - db/schema-ora.sql
          - db/data-ora.sql
        rlcms-base:
          - db/schema-rlcms_base.sql
          - db/data-rlcms_base.sql
        rlcms-pv1:
          - db/schema-rlcms_pv1.sql
          - db/data-rlcms_pv1.sql
        rlcms-pv2:
          - db/schema-rlcms_pv2.sql
          - db/data-rlcms_pv2.sql
        rlcms-pv3:
          - db/schema-rlcms_pv3.sql
          - db/data-rlcms_pv3.sql
        bscopy-pv1:
          - db/schema-bscopy_pv1.sql
          - db/data-bscopy_pv1.sql
        bscopy-pv2:
          - db/schema-bscopy_pv2.sql
          - db/data-bscopy_pv2.sql
        bscopy-pv3:
          - db/schema-bscopy_pv3.sql
          - db/data-bscopy_pv3.sql
    # Druid连接池配置
    druid:
      # 指定使用Druid数据源
      type: com.alibaba.druid.pool.DruidDataSource
      # 初始连接数
      initial-size: 8
      # 最小空闲连接数
      min-idle: 8
      # 最大连接数
      max-active: 64
      # 获取连接等待超时时间（毫秒）
      max-wait: 60000
      # 检测间隔时间（毫秒）
      time-between-eviction-runs-millis: 60000
      # 连接在池中最小生存的时间（毫秒）
      min-evictable-idle-time-millis: 600000
      # 连接在池中最大生存的时间（毫秒）
      max-evictable-idle-time-millis: 1800000
      # 是否开启PSCache
      pool-prepared-statements: true
      # 每个连接上PSCache的大小
      max-pool-prepared-statement-per-connection-size: 20
      # 检测连接是否有效的SQL
      validation-query: SELECT 1
      # 检测连接是否有效的超时时间（秒）
      validation-query-timeout: 5
      # 申请连接时执行validationQuery检测连接是否有效
      test-on-borrow: false
      # 归还连接时执行validationQuery检测连接是否有效
      test-on-return: false
      # 空闲时检测连接是否有效
      test-while-idle: true
    # ora数据源配置（原primary）
    ora:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:file:./data/ora;AUTO_SERVER=TRUE;
      username: sa
      password: 
    # rlcms_base数据源配置（原secondary）
    rlcms-base:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:file:./data/rlcms_base;AUTO_SERVER=TRUE;
      username: sa
      password: 
    # rlcms_pv1数据源配置（原tertiary）
    rlcms-pv1:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:file:./data/rlcms_pv1;AUTO_SERVER=TRUE;
      username: sa
      password: 
    # rlcms_pv2数据源配置（原fourth）
    rlcms-pv2:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:file:./data/rlcms_pv2;AUTO_SERVER=TRUE;
      username: sa
      password: 
    # rlcms_pv3数据源配置（原fifth）
    rlcms-pv3:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:file:./data/rlcms_pv3;AUTO_SERVER=TRUE;
      username: sa
      password: 
    # bscopy_pv1数据源配置（原sixth）
    bscopy-pv1:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:file:./data/bscopy_pv1;AUTO_SERVER=TRUE;
      username: sa
      password: 
    # bscopy_pv2数据源配置（原seventh）
    bscopy-pv2:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:file:./data/bscopy_pv2;AUTO_SERVER=TRUE;
      username: sa
      password: 
    # bscopy_pv3数据源配置（原eighth）
    bscopy-pv3:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:file:./data/bscopy_pv3;AUTO_SERVER=TRUE;
      username: sa
      password: 

# 日志配置
logging:
  level:
    io.github.luolong47.dbchecker: INFO
    org.springframework.jdbc.core: DEBUG

# 数据库表排除与包含配置
db:
  export:
    # 导出Excel文件的目录，默认为当前目录
    directory: ./export
  exclude:
    # 要排除的表名列表，使用逗号分隔
    # 格式：表名 或 表名@SCHEMA
    tables: SYS_LOG,SYS_USER,QRTZ_TRIGGERS@PUBLIC
  include:
    # 要包含的schema列表，使用逗号分隔
    schemas: PUBLIC,RLCMS,BSCOPY
    # 要包含的表名列表，使用逗号分隔
    # 格式：表名 或 表名@SCHEMA
    # 注意：要包含其他schema中的表，必须使用表名@SCHEMA格式
    tables: PRODUCTS,ORDERS,USERS,SPECIAL_TABLE@OTHER_SCHEMA
