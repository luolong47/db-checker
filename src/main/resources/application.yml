spring:
  application:
    name: db-checker
  # 主数据源配置
  datasource:
    # 数据库初始化脚本配置
    init:
      # 是否启用初始化
      enabled: true
      # 各数据源脚本配置
      scripts:
        ora:
          - db/schema-ora.sql
          - db/data-ora.sql
        rlcms-base:
          - db/schema-rlcms_base.sql
          - db/data-rlcms_base.sql
        rlcms-pv1:
          - db/schema-rlcms_pv1.sql
          - db/data-rlcms_pv1.sql
        rlcms-pv2:
          - db/schema-rlcms_pv2.sql
          - db/data-rlcms_pv2.sql
        rlcms-pv3:
          - db/schema-rlcms_pv3.sql
          - db/data-rlcms_pv3.sql
        bscopy-pv1:
          - db/schema-bscopy_pv1.sql
          - db/data-bscopy_pv1.sql
        bscopy-pv2:
          - db/schema-bscopy_pv2.sql
          - db/data-bscopy_pv2.sql
        bscopy-pv3:
          - db/schema-bscopy_pv3.sql
          - db/data-bscopy_pv3.sql
    hikari:
      # 连接超时时间（毫秒）
      connection-timeout: 60000
      # 最小空闲连接数
      minimum-idle: 8
      # 最大连接数
      maximum-pool-size: 64
      # 空闲连接超时时间（毫秒）
      idle-timeout: 600000
      # 连接最大生存时间（毫秒）
      max-lifetime: 1800000
      # 查询超时时间（秒）
      connection-test-query: SELECT 1
      # 自动提交
      auto-commit: true
      # 验证超时时间（秒）
      validation-timeout: 5000
    # ora数据源配置（原primary）
    ora:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:file:./data/ora;AUTO_SERVER=TRUE;
      username: sa
      password: 
    # rlcms_base数据源配置（原secondary）
    rlcms-base:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:file:./data/rlcms_base;AUTO_SERVER=TRUE;
      username: sa
      password: 
    # rlcms_pv1数据源配置（原tertiary）
    rlcms-pv1:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:file:./data/rlcms_pv1;AUTO_SERVER=TRUE;
      username: sa
      password: 
    # rlcms_pv2数据源配置（原fourth）
    rlcms-pv2:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:file:./data/rlcms_pv2;AUTO_SERVER=TRUE;
      username: sa
      password: 
    # rlcms_pv3数据源配置（原fifth）
    rlcms-pv3:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:file:./data/rlcms_pv3;AUTO_SERVER=TRUE;
      username: sa
      password: 
    # bscopy_pv1数据源配置（原sixth）
    bscopy-pv1:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:file:./data/bscopy_pv1;AUTO_SERVER=TRUE;
      username: sa
      password: 
    # bscopy_pv2数据源配置（原seventh）
    bscopy-pv2:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:file:./data/bscopy_pv2;AUTO_SERVER=TRUE;
      username: sa
      password: 
    # bscopy_pv3数据源配置（原eighth）
    bscopy-pv3:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:file:./data/bscopy_pv3;AUTO_SERVER=TRUE;
      username: sa
      password: 

# 日志配置
logging:
  level:
    io.github.luolong47.dbchecker: INFO
    org.springframework.jdbc.core: DEBUG

# 数据库表排除与包含配置
db:
  export:
    # 导出Excel文件的目录，默认为当前目录
    directory: ./export
  exclude:
    # 要排除的schema列表，默认排除INFORMATION_SCHEMA
    schemas: INFORMATION_SCHEMA
    # 要排除的表名前缀
    table-prefixes: SYS_,sys_
  include:
    # 明确要包含的表，即使它们符合排除条件
    # 格式：表名 或 表名@SCHEMA
    # 注意：要明确包含INFORMATION_SCHEMA中的表，必须使用表名@INFORMATION_SCHEMA格式
    tables: PRODUCTS@PUBLIC,ORDERS@PUBLIC,USERS@PUBLIC
