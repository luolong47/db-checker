spring:
  application:
    name: db-checker
  # 禁用Spring Boot的自动初始化
  sql:
    init:
      mode: never
  # 主数据源配置
  datasource:
    # 数据库初始化脚本配置
    init:
      # 是否启用初始化
      enabled: false
      # 各数据源脚本配置
      scripts:
        ora:
          - db/schema-ora.sql
          - db/data-ora.sql
        rlcms-base:
          - db/schema-rlcms_base.sql
          - db/data-rlcms_base.sql
        rlcms-pv1:
          - db/schema-rlcms_pv1.sql
          - db/data-rlcms_pv1.sql
        rlcms-pv2:
          - db/schema-rlcms_pv2.sql
          - db/data-rlcms_pv2.sql
        rlcms-pv3:
          - db/schema-rlcms_pv3.sql
          - db/data-rlcms_pv3.sql
        bscopy-pv1:
          - db/schema-bscopy_pv1.sql
          - db/data-bscopy_pv1.sql
        bscopy-pv2:
          - db/schema-bscopy_pv2.sql
          - db/data-bscopy_pv2.sql
        bscopy-pv3:
          - db/schema-bscopy_pv3.sql
          - db/data-bscopy_pv3.sql
    # ora数据源配置（原primary）
    ora:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:file:./data/ora;AUTO_SERVER=TRUE;
      username: sa
      password:
    # ora-slave数据源配置（ora的从节点）
    ora-slave:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:file:./data/ora;AUTO_SERVER=TRUE;
      username: sa
      password:
    # rlcms_base数据源配置（原secondary）
    rlcms-base:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:file:./data/rlcms_base;AUTO_SERVER=TRUE;
      username: sa
      password:
    # rlcms_pv1数据源配置（原tertiary）
    rlcms-pv1:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:file:./data/rlcms_pv1;AUTO_SERVER=TRUE;
      username: sa
      password:
    # rlcms_pv2数据源配置（原fourth）
    rlcms-pv2:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:file:./data/rlcms_pv2;AUTO_SERVER=TRUE;
      username: sa
      password:
    # rlcms_pv3数据源配置（原fifth）
    rlcms-pv3:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:file:./data/rlcms_pv3;AUTO_SERVER=TRUE;
      username: sa
      password:
    # bscopy_pv1数据源配置（原sixth）
    bscopy-pv1:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:file:./data/bscopy_pv1;AUTO_SERVER=TRUE;
      username: sa
      password:
    # bscopy_pv2数据源配置（原seventh）
    bscopy-pv2:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:file:./data/bscopy_pv2;AUTO_SERVER=TRUE;
      username: sa
      password:
    # bscopy_pv3数据源配置（原eighth）
    bscopy-pv3:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:file:./data/bscopy_pv3;AUTO_SERVER=TRUE;
      username: sa
      password:

# 日志配置
logging:
  level:
    root: info
    org.springframework.jdbc.core: info
    io.github.luolong47.dbchecker: info
    com.zaxxer.hikari: warn
    # 日志文件配置
  file:
    name: ./logs/db-checker.log
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# 数据库表排除与包含配置
db:
  export:
    # 导出Excel文件的目录，默认为当前目录
    directory: ./export
  include:
    # 要包含的schema列表，使用逗号分隔
    schemas: PUBLIC,RLCMS,BSCOPY
    # 要包含的表名列表，使用逗号分隔（必填项）
    tables: PRODUCTS,ORDERS,USERS,CUSTOMERS,EMPLOYEES,SALES,INVENTORY,SUPPLIERS,CATEGORY,PAYMENTS,SPECIAL_TABLE@OTHER_SCHEMA,FORMULA1_TRUE,FORMULA1_FALSE,FORMULA1_NA,FORMULA2_TRUE,FORMULA2_FALSE,FORMULA2_NA,FORMULA3_TRUE,FORMULA3_FALSE,FORMULA3_NA,FORMULA4_TRUE,FORMULA4_FALSE,FORMULA4_NA,FORMULA5_TRUE,FORMULA5_FALSE,FORMULA5_NA,FORMULA6_TRUE,FORMULA6_FALSE,FORMULA6_NA
    # 运行模式配置
  run:
    # 运行模式：RESUME(断点续跑，默认)、FULL(全量重跑)、DB(指定数据库重跑)
    mode: FULL
  resume:
    # 断点续跑状态文件路径
    file: ./export/resume_state.json
  # 需要重跑的数据库列表，仅在mode=DB时生效，使用逗号分隔
  rerun:
    databases:
  where:
    ora:
      ORDERS: "id in ( 1, 2 )"
      users: "username = 'user1'"
    rlcms-pv1:
      orders: "user_id = 1"
  # 公式应用配置，配置值为表名，逗号分隔
  formula:
    # 公式1: ora = rlcms_pv1 + rlcms_pv2 + rlcms_pv3
    formula1: INVENTORY,SUPPLIERS,FORMULA1_TRUE,FORMULA1_FALSE,FORMULA1_NA
    # 公式2: ora = rlcms_base
    formula2: ORDERS,SALES,FORMULA2_TRUE,FORMULA2_FALSE,FORMULA2_NA
    # 公式3: ora = rlcms_base = bscopy_pv1 = bscopy_pv2 = bscopy_pv3
    formula3: EMPLOYEES,FORMULA3_TRUE,FORMULA3_FALSE,FORMULA3_NA
    # 公式4: ora = rlcms_pv1 = rlcms_pv2 = rlcms_pv3
    formula4: PAYMENTS,CATEGORY,FORMULA4_TRUE,FORMULA4_FALSE,FORMULA4_NA
    # 公式5: ora = rlcms_base = rlcms_pv1 = rlcms_pv2 = rlcms_pv3
    formula5: CUSTOMERS,FORMULA5_TRUE,FORMULA5_FALSE,FORMULA5_NA
    # 公式6: ora = rlcms_pv1
    formula6: PRODUCTS,USERS,SPECIAL_TABLE@OTHER_SCHEMA,FORMULA6_TRUE,FORMULA6_FALSE,FORMULA6_NA
  hints:
    type:
      t1: ora
      t2: rlcms_pv1,rlcms_pv2,rlcms_pv3,bscopy_pv1,bscopy_pv2,bscopy_pv3,rlcms_base
    table:
      t1: INVENTORY,SALES, USERS,ORDERS
      t2: PAYMENTS,USERS
    sql:
      t1: '/*+ parallel(4) */'
      t2: '/*+ set(query_dop 4) */'
  # 从节点查询配置
  slave_query:
    # 要使用从节点查询的表名列表，使用逗号分隔
    tables: USERS, ORDERS
  sum:
    # 是否启用求和
    enable: true
    # 金额字段识别的最小小数位数
    minDecimalDigits: 3
  pool:
    defalut: 8
    map:
      ora: 8
      rlcms_base: 8
      rlcms_pv1: 8
      rlcms_pv2: 8
      rlcms_pv3: 8
      bscopy_pv1: 8
      bscopy_pv2: 8
      bscopy_pv3: 8
